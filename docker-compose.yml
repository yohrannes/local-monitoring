services:

  prometheus:
    image: prom/prometheus:v3.3.1
    container_name: prometheus
    networks:
      - net-local
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.0
    container_name: cadvisor
    privileged: true
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/machine-id:/etc/machine-id:ro
      - /dev/kmsg:/dev/kmsg:ro
    security_opt:
      - apparmor=unconfined
    restart: always
    networks:
      - net-local
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=30s"
    
  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - net-local
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

networks:
  net-local:
    driver: bridge

volumes:
  grafana-data:
  prometheus-data:
